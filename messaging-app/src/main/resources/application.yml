server:
  port: 8081

spring:
  application:
    name: messaging

  data:
    mongodb:
      uri: mongodb://host.docker.internal:27017/testdb?replicaSet=rs0
      host: mongo
      port: 27017
      database: testdb

  cloud:
    aws:
      region:
        static: eu-west-2
      sqs:
        s3:
          url: https://sqs.eu-west-2.amazonaws.com/195571588534/generated-docs-s3-queue
          name: generated-docs-s3-queue
        documentdb:
          name: generated-docs-documentdb-queue
      s3:
        output:
          bucket-arn: arn:aws:s3:::generated-docs-demo-bucket
          name: generated-docs-demo-bucket
        input:
          bucket-arn: arn:aws:s3:::generated-docs-template-bucket
          name: generated-docs-template-bucket

management:
  endpoints:
    web:
      exposure.include: "health,prometheus"
      base-path: /
      path-mapping.prometheus: "metrics"
    jmx.exposure.exclude: "*"
  metrics:
    enable.jvm: true
    distribution:
      percentiles.http.server.requests: 0.5, 0.9, 0.95, 0.99, 0.999
      slo:
        "[http.server.requests]": "10ms,50ms,100ms,200ms,500ms,1s,5s,10s,30s"